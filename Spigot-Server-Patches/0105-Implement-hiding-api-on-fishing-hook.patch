From 61277b3d03d5b0842ce89f434125af738cf3ead9 Mon Sep 17 00:00:00 2001
From: Noksio <noksiopro@gmail.com>
Date: Sun, 30 Jun 2019 13:20:50 -0400
Subject: [PATCH] Implement hiding api on fishing hook


diff --git a/src/main/java/net/minecraft/server/EntityFishingHook.java b/src/main/java/net/minecraft/server/EntityFishingHook.java
index 0fc1e85f..95284fd0 100644
--- a/src/main/java/net/minecraft/server/EntityFishingHook.java
+++ b/src/main/java/net/minecraft/server/EntityFishingHook.java
@@ -1,20 +1,22 @@
 package net.minecraft.server;
 
 import java.util.Arrays;
-import java.util.Collection;
+import java.util.Iterator;
 import java.util.List;
 
+import org.bukkit.craftbukkit.event.CraftEventFactory;
+import org.bukkit.entity.Fish;
 // CraftBukkit start
 import org.bukkit.entity.Player;
-import org.bukkit.entity.Fish;
+import org.bukkit.event.entity.ProjectileCollideEvent;
 import org.bukkit.event.player.PlayerFishEvent;
 // CraftBukkit end
 
 public class EntityFishingHook extends Entity {
 
-    private static final List d = Arrays.asList(new PossibleFishingResult[] { (new PossibleFishingResult(new ItemStack(Items.LEATHER_BOOTS), 10)).a(0.9F), new PossibleFishingResult(new ItemStack(Items.LEATHER), 10), new PossibleFishingResult(new ItemStack(Items.BONE), 10), new PossibleFishingResult(new ItemStack(Items.POTION), 10), new PossibleFishingResult(new ItemStack(Items.STRING), 5), (new PossibleFishingResult(new ItemStack(Items.FISHING_ROD), 2)).a(0.9F), new PossibleFishingResult(new ItemStack(Items.BOWL), 10), new PossibleFishingResult(new ItemStack(Items.STICK), 5), new PossibleFishingResult(new ItemStack(Items.INK_SACK, 10, 0), 1), new PossibleFishingResult(new ItemStack(Blocks.TRIPWIRE_SOURCE), 10), new PossibleFishingResult(new ItemStack(Items.ROTTEN_FLESH), 10)});
-    private static final List e = Arrays.asList(new PossibleFishingResult[] { new PossibleFishingResult(new ItemStack(Blocks.WATER_LILY), 1), new PossibleFishingResult(new ItemStack(Items.NAME_TAG), 1), new PossibleFishingResult(new ItemStack(Items.SADDLE), 1), (new PossibleFishingResult(new ItemStack(Items.BOW), 1)).a(0.25F).a(), (new PossibleFishingResult(new ItemStack(Items.FISHING_ROD), 1)).a(0.25F).a(), (new PossibleFishingResult(new ItemStack(Items.BOOK), 1)).a()});
-    private static final List f = Arrays.asList(new PossibleFishingResult[] { new PossibleFishingResult(new ItemStack(Items.RAW_FISH, 1, EnumFish.COD.a()), 60), new PossibleFishingResult(new ItemStack(Items.RAW_FISH, 1, EnumFish.SALMON.a()), 25), new PossibleFishingResult(new ItemStack(Items.RAW_FISH, 1, EnumFish.CLOWNFISH.a()), 2), new PossibleFishingResult(new ItemStack(Items.RAW_FISH, 1, EnumFish.PUFFERFISH.a()), 13)});
+    private static final List<PossibleFishingResult> d = Arrays.asList(new PossibleFishingResult[] { (new PossibleFishingResult(new ItemStack(Items.LEATHER_BOOTS), 10)).a(0.9F), new PossibleFishingResult(new ItemStack(Items.LEATHER), 10), new PossibleFishingResult(new ItemStack(Items.BONE), 10), new PossibleFishingResult(new ItemStack(Items.POTION), 10), new PossibleFishingResult(new ItemStack(Items.STRING), 5), (new PossibleFishingResult(new ItemStack(Items.FISHING_ROD), 2)).a(0.9F), new PossibleFishingResult(new ItemStack(Items.BOWL), 10), new PossibleFishingResult(new ItemStack(Items.STICK), 5), new PossibleFishingResult(new ItemStack(Items.INK_SACK, 10, 0), 1), new PossibleFishingResult(new ItemStack(Blocks.TRIPWIRE_SOURCE), 10), new PossibleFishingResult(new ItemStack(Items.ROTTEN_FLESH), 10)});
+    private static final List<PossibleFishingResult> e = Arrays.asList(new PossibleFishingResult[] { new PossibleFishingResult(new ItemStack(Blocks.WATER_LILY), 1), new PossibleFishingResult(new ItemStack(Items.NAME_TAG), 1), new PossibleFishingResult(new ItemStack(Items.SADDLE), 1), (new PossibleFishingResult(new ItemStack(Items.BOW), 1)).a(0.25F).a(), (new PossibleFishingResult(new ItemStack(Items.FISHING_ROD), 1)).a(0.25F).a(), (new PossibleFishingResult(new ItemStack(Items.BOOK), 1)).a()});
+    private static final List<PossibleFishingResult> f = Arrays.asList(new PossibleFishingResult[] { new PossibleFishingResult(new ItemStack(Items.RAW_FISH, 1, EnumFish.COD.a()), 60), new PossibleFishingResult(new ItemStack(Items.RAW_FISH, 1, EnumFish.SALMON.a()), 25), new PossibleFishingResult(new ItemStack(Items.RAW_FISH, 1, EnumFish.CLOWNFISH.a()), 2), new PossibleFishingResult(new ItemStack(Items.RAW_FISH, 1, EnumFish.PUFFERFISH.a()), 13)});
     private int g = -1;
     private int h = -1;
     private int i = -1;
@@ -49,16 +51,16 @@ public class EntityFishingHook extends Entity {
         this.owner.hookedFish = this;
         this.a(0.25F, 0.25F);
         this.setPositionRotation(entityhuman.locX, entityhuman.locY + 1.62D - (double) entityhuman.height, entityhuman.locZ, entityhuman.yaw, entityhuman.pitch);
-        this.locX -= (double) (MathHelper.cos(this.yaw / 180.0F * 3.1415927F) * 0.16F);
+        this.locX -= (double) (MathHelper.cos(this.yaw / 180.0F * (float) Math.PI) * 0.16F);
         this.locY -= 0.10000000149011612D;
-        this.locZ -= (double) (MathHelper.sin(this.yaw / 180.0F * 3.1415927F) * 0.16F);
+        this.locZ -= (double) (MathHelper.sin(this.yaw / 180.0F * (float) Math.PI) * 0.16F);
         this.setPosition(this.locX, this.locY, this.locZ);
         this.height = 0.0F;
         float f = 0.4F;
 
-        this.motX = (double) (-MathHelper.sin(this.yaw / 180.0F * 3.1415927F) * MathHelper.cos(this.pitch / 180.0F * 3.1415927F) * f);
-        this.motZ = (double) (MathHelper.cos(this.yaw / 180.0F * 3.1415927F) * MathHelper.cos(this.pitch / 180.0F * 3.1415927F) * f);
-        this.motY = (double) (-MathHelper.sin(this.pitch / 180.0F * 3.1415927F) * f);
+        this.motX = (double) (-MathHelper.sin(this.yaw / 180.0F * (float) Math.PI) * MathHelper.cos(this.pitch / 180.0F * (float) Math.PI) * f);
+        this.motZ = (double) (MathHelper.cos(this.yaw / 180.0F * (float) Math.PI) * MathHelper.cos(this.pitch / 180.0F * (float) Math.PI) * f);
+        this.motY = (double) (-MathHelper.sin(this.pitch / 180.0F * (float) Math.PI) * f);
         this.c(this.motX, this.motY, this.motZ, 1.5F, 1.0F);
     }
 
@@ -98,7 +100,7 @@ public class EntityFishingHook extends Entity {
             this.pitch = (float) ((double) this.pitch + (this.aG - (double) this.pitch) / (double) this.aB);
             --this.aB;
             this.setPosition(d0, d1, d2);
-            this.b(this.yaw, this.pitch);
+            this.setYawPitch(this.yaw, this.pitch);
         } else {
             if (!this.world.isStatic) {
                 ItemStack itemstack = this.owner.bF();
@@ -156,13 +158,14 @@ public class EntityFishingHook extends Entity {
             }
 
             Entity entity = null;
-            List list = this.world.getEntities(this, this.boundingBox.a(this.motX, this.motY, this.motZ).grow(1.0D, 1.0D, 1.0D));
+            List<Entity> list = this.world.getEntities(this, this.boundingBox.a(this.motX, this.motY, this.motZ).grow(1.0D, 1.0D, 1.0D));
             double d4 = 0.0D;
 
             double d5;
 
-            for (int i = 0; i < list.size(); ++i) {
-                Entity entity1 = (Entity) list.get(i);
+            Iterator<Entity> it = list.iterator();
+            while (it.hasNext()) {
+            	Entity entity1 = it.next();
 
                 if (entity1.R() && (entity1 != this.owner || this.aw >= 5)) {
                     float f = 0.3F;
@@ -182,9 +185,26 @@ public class EntityFishingHook extends Entity {
             if (entity != null) {
                 movingobjectposition = new MovingObjectPosition(entity);
             }
+            
+            // RinnySpigot start - Allow hook to fly through players
+            if (movingobjectposition != null && movingobjectposition.entity instanceof EntityPlayer && owner != null && owner instanceof EntityPlayer) {
+                if (!((EntityPlayer) owner).getBukkitEntity().canSee(((EntityPlayer) movingobjectposition.entity).getBukkitEntity())) {
+                    movingobjectposition = null;
+                }
+            }
+            // RinnySpigot end
 
             if (movingobjectposition != null) {
-                org.bukkit.craftbukkit.event.CraftEventFactory.callProjectileHitEvent(this); // Craftbukkit - Call event
+                org.bukkit.craftbukkit.event.CraftEventFactory.callProjectileHitEvent(this, movingobjectposition); // Craftbukkit - Call event
                 if (movingobjectposition.entity != null) {
                     if (movingobjectposition.entity.damageEntity(DamageSource.projectile(this, this.owner), 0.0F)) {
                         this.hooked = movingobjectposition.entity;
@@ -204,17 +224,9 @@ public class EntityFishingHook extends Entity {
                     ;
                 }
 
-                while (this.pitch - this.lastPitch >= 180.0F) {
-                    this.lastPitch += 360.0F;
-                }
-
-                while (this.yaw - this.lastYaw < -180.0F) {
-                    this.lastYaw -= 360.0F;
-                }
-
-                while (this.yaw - this.lastYaw >= 180.0F) {
-                    this.lastYaw += 360.0F;
-                }
+                while (this.pitch - this.lastPitch >= 180.0F) this.lastPitch += 360.0F;
+                while (this.yaw - this.lastYaw < -180.0F) this.lastYaw -= 360.0F;
+                while (this.yaw - this.lastYaw >= 180.0F) this.lastYaw += 360.0F;
 
                 this.pitch = this.lastPitch + (this.pitch - this.lastPitch) * 0.2F;
                 this.yaw = this.lastYaw + (this.yaw - this.lastYaw) * 0.2F;
@@ -244,7 +256,6 @@ public class EntityFishingHook extends Entity {
                     if (this.random.nextFloat() < 0.25F && this.world.isRainingAt(MathHelper.floor(this.locX), MathHelper.floor(this.locY) + 1, MathHelper.floor(this.locZ))) {
                         k = 2;
                     }
-
                     if (this.random.nextFloat() < 0.5F && !this.world.i(MathHelper.floor(this.locX), MathHelper.floor(this.locY) + 1, MathHelper.floor(this.locZ))) {
                         --k;
                     }
@@ -452,17 +463,16 @@ public class EntityFishingHook extends Entity {
         f2 = MathHelper.a(f2, 0.0F, 1.0F);
         if (f < f1) {
             this.owner.a(StatisticList.A, 1);
-            return ((PossibleFishingResult) WeightedRandom.a(this.random, (Collection) d)).a(this.random);
+            return ((PossibleFishingResult) WeightedRandom.a(this.random, d)).a(this.random);
         } else {
             f -= f1;
             if (f < f2) {
                 this.owner.a(StatisticList.B, 1);
-                return ((PossibleFishingResult) WeightedRandom.a(this.random, (Collection) e)).a(this.random);
+                return ((PossibleFishingResult) WeightedRandom.a(this.random, e)).a(this.random);
             } else {
-                float f3 = f - f2;
-
+                //float f3 = f - f2;
                 this.owner.a(StatisticList.z, 1);
-                return ((PossibleFishingResult) WeightedRandom.a(this.random, (Collection) EntityFishingHook.f)).a(this.random); // CraftBukkit - fix static reference to fish list
+                return ((PossibleFishingResult) WeightedRandom.a(this.random, EntityFishingHook.f)).a(this.random); // CraftBukkit - fix static reference to fish list
             }
         }
     }
-- 
2.19.1.windows.1

